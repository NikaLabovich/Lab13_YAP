#pragma once
#include "In.h"
#include "Out.h"


namespace Fst
{
	struct RELATION //ребро:символ -> вершина графа переходов КА
	{
		char symbol; // символ перехода
		short nnode; // номер смежной вершины
		RELATION(
			char c = 0x00, // символ перехода
			short ns = NULL // новое состояние
		);
	};

	struct NODE // вершина графа переходов
	{
		short n_relation; // количество инцидентных ребер
		RELATION *relations; // инцидентные ребра
		NODE();
		NODE(
			short n, // количество инцидентных ребер
			RELATION rel, ... // список ребер
		);
	};

	struct FST // недетерминированный коечный автомат
	{
		char* string; // цепочка(строка, завершается 0х00)
		short position; // текущая позиция в цепочке
		short nstates; // количество состояний автомата
		NODE* nodes; // граф переходов : [0] - начальное состояние, [nstate-1] - конечное
		short* rstates; // возможные состояния автомата на данной позиции
		FST(
			char* s, // цепочка(строка, завершается 0х00)
			short ns, // количество состояний автомата
			NODE n, ... // список состояний (граф переходов)
		);
	};

	bool execute( // выполнить распознание цепочки
		FST& fst // недетерминированный КА
	);

	int executee(FST& fst);

	void fstWrite(In::IN in, Out::OUT out);
}